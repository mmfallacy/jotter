@import '../../variables.scss/';


.TaskContainer{
    width:100%;
    height: calc(100% - 12px - 83px);
    overflow-y: auto;
    margin-top: 25px;
    &::-webkit-scrollbar {
        width: 0px;
    }
}


.Task{
    height:60px;
    width:100%;
    border-bottom:1px solid rgba(white,.1);
    padding: 20px;

    display:flex;
    position: relative;
    column-gap: 5px;

    & > :nth-child(n + 4){
        box-sizing: content-box;
        margin-left: 5px;
    }    


}

.LeftColor{
    height:100%;
    width:5px;
    background-color: var(--color);

    position: absolute;
    top:0;
    left:0;
}

.Background{
    height:100%;
    width:5px;
    background-color: rgba(white,.1);

    position: absolute;
    top:0;
    left:0;

    transition: width .4s ease-out;
    .active &{
        width:100%;
    }
}


.ButtonContainer{
    height:18px;
    width:18px;
    position: relative;
    z-index: 2;
}

%TaskButton{
    height:100%;
    width:100%;
    border-radius: 2.5px;

    display:flex;
    align-items: center;
    justify-content: center;
    
    cursor:pointer;

}

.Checkbox{
    @extend %TaskButton;
    background: none;
    border:1px solid $orange;
    position: absolute;
    top:0;
    left:0;

    transition:background-color .2s linear;
    &.active{
        background-color: $orange;
    }
    &:disabled{
        cursor:default;
    }
}

.Delete{
    @extend %TaskButton;
    background: none;
    border:1px solid $orange;
    position: absolute;
    top:0;
    left:0;
    svg{
        opacity:0;
    }


    &.enterActive{
        border:1px solid $pink;
        background: $pink;
        transition:border .1s linear, background-color .1s linear;
        transition-delay: .25s;
        svg{
            opacity:1;
            transition:opacity .1s linear;
            transition-delay: .5s;
        }

    }
    &.enterDone{
        border:1px solid $pink;
        background: $pink;
        svg{
            opacity:1;
        }

    }
    &.exitActive{
        border:1px solid $orange;
        background: none;
        transition:border .1s linear, background-color .1s linear;
        transition-delay: .25s;
        svg{
            opacity:0;
            transition:opacity .15s linear;
        }
    }
    &.exitDone{
        opacity:0;

        svg{
            opacity:0;
        }
    }
}

.TaskNameWrapper{
    height:100%;
    width: calc(100% - 58px - 10px); // 100% - Sibling width - padding


    .Linked &{
        width: calc(100% - 88px - 10px); // 100% - Sibling width - padding

    }

    .Note &{
        width: calc(100% - 18px - 5px); // 100% - Sibling width - padding

    }

    background-color: red;
}

.TaskName{
    display: block;
    font-size: 16px;
    height:16px;
    line-height: 16px;
    position: relative;
    overflow: hidden;

    color: white;

    transition: color .4s ease-out .4s;

    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;

    max-width: 100%;
    user-select: none;

    .ticked &{
        color: rgba(white,.5)
    }

    .Strikethrough{
        width:0;
        position: absolute;
        top:50%;
        left:-2px;
        transform: translateY(-50%);
        transition: width .3s ease-out .3s;

        height:.5px;
        border:none;
        background-color: #888787;
    }
    

    .ticked & .Strikethrough{
        width: calc(100% + 2px);
        visibility: visible;
    }
}

.TaskTime{
    height:100%;
    width:40px;

    user-select: none;

    font-size: 9px;

    text-align: right;
    color: $lightGray;
    justify-self: right;
    border:1px solid red;
}


.Link{
    height:100%;
    background: none;
    border:none;
    width:30px;
    svg{
        stroke:rgba(white,.4);
    }

    &.hasLink {
        cursor:pointer;
        transition: transform .05s linear;
        svg{
            stroke:white;
        }
        &:hover{
            transform: scale(1.05)
        }
    }
}

/// ENTRY

.Entry {
    @extend .Task;

    .Checkbox{
        border-color: rgba(white,.4);
    }
    .LeftColor{
        background-color: rgba(white,.4);
        width: 10px;
        cursor:pointer;
    }
    .Link{
        cursor: pointer;
    }

    .TaskName{
        @extend .TaskNameWrapper;
        background: none;
        border:none;
        padding-bottom:3px;
        border-bottom: 1px solid rgba(white,1);
        box-sizing:content-box;
        margin-bottom:-3.5px;
        width:90%;
        transition: border-bottom .25s linear;
        &:placeholder-shown{
            border-bottom: 1px solid $lightGray;
        }
        &:focus{
            border-bottom: 1px solid rgba($orange,1);
        }
    }
    .TaskTime{
        padding:1px 7.5px;
        background: none;
        border:1px solid $lightGray;
        border-radius:5rem;
        margin-right:-12.5px;
        cursor:pointer;
    }
}

.EntryButton{
    @extend %TaskButton;
    
    background: linear-gradient(to bottom, $orange, $lightGray, transparent);
    background-position: left 50%;
    background-size: 100% 800%;
    
    .Gestures{
        .Drag-up{
            background-position: left 0%;
        }
    }

}